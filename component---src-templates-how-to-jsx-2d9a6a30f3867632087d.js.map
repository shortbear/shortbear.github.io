{"version":3,"file":"component---src-templates-how-to-jsx-2d9a6a30f3867632087d.js","mappings":"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","sources":["webpack://short-bear/./src/components/Seo.jsx","webpack://short-bear/./src/components/Prose.jsx","webpack://short-bear/./src/utils/youTube.js","webpack://short-bear/./src/components/YouTubeEmbed.jsx","webpack://short-bear/./src/utils/formatDateTime.js","webpack://short-bear/./src/utils/markdownToHtml.js","webpack://short-bear/./src/utils/richSnippets.js","webpack://short-bear/./src/templates/how-to.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Seo = ({title, description, snippet}) => {\n  return (\n    <>\n      <title>{title}</title>\n      <meta\n          name=\"description\"\n          content={description}\n        />\n      {snippet ? <script type=\"application/ld+json\">{JSON.stringify(snippet)}</script> : null}\n    </>\n  )\n}\n\nexport default Seo;","import React from 'react'\nimport clsx from 'clsx'\n\nexport function Prose({ children, className }) {\n  return (\n    <div className={clsx(className, 'prose dark:prose-invert')}>{children}</div>\n  )\n}\n","export const extractIdFromUrl = (url) => url.match(/^https:\\/\\/youtu.be\\/(.+)$/)[1]\n\nexport const contentUrl = (url) => `https://www.youtube.com/watch?v=${extractIdFromUrl(url)}`\n\nexport const embedUrl = (url) => `https://www.youtube.com/embed/${extractIdFromUrl(url)}`","import React from \"react\";\nimport { embedUrl } from \"../utils/youTube\";\n\nconst YouTubeEmbed = ({url}) => {\n  if (!/embed/.test(url)) {\n    url = embedUrl(url);\n  }\n  return (\n    <iframe width=\"560\" height=\"315\" src={`${url}?controls=0`} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n  )\n}\n\nexport default YouTubeEmbed;","export const formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const roundToMinutes = (seconds) => {\n  return Math.floor(seconds / 60) + 1;\n}","import showdown from \"showdown\";\n\nconst markdownToHtml = (markdown) => {\n  const converter = new showdown.Converter()\n  return converter.makeHtml(markdown);\n}\n\nexport default markdownToHtml;","import markdownToHtml from \"./markdownToHtml\";\nimport { roundToMinutes } from \"./formatDateTime\";\nimport { contentUrl, embedUrl } from \"./youTube\";\n\nconst faqToSnippet = (faq) => (\n  {\n    \"@type\": \"Question\",\n    \"name\": faq.question,\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": markdownToHtml(faq.seo_answer)\n    }\n  }\n)\n\nexport const faqsToSnippet = (faqs) => {\n  const obj = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": faqs.map(faqToSnippet)\n  }\n  return JSON.stringify(obj);\n}\n\nconst createStepToSnippet = (slug) => {\n  const stepToSnippet = ({name, text, image}, i) => {\n    console.log({i});\n    image = `https://shortbear.com/images/${image}`\n    return {\n      \"@type\": \"HowToStep\",\n      \"url\": `https://shortbear.com${slug}#step${i}`,\n      name,\n      text,\n      image,\n      video: {\n        \"@id\": `step${i}`\n      }\n    }\n  }\n  return stepToSnippet\n}\n\nconst formatDuration = (duration) => `PT${roundToMinutes(duration)}M`\n\nconst createStepToClip = (url) => {\n  const stepToClip = ({clip, name}, i) => {\n    const { endOffset, startOffset } = clip;\n    return {\n      \"@type\": \"Clip\",\n      \"@id\": `step${i}`,\n      name,\n      startOffset,\n      endOffset,\n      url: `${url}&t=${startOffset}`\n    }\n  }\n  return stepToClip\n}\n\nexport const howToToSnippet = (howTo) => {\n  const {date, excerpt, image, steps, title, video} = howTo.frontmatter;\n  const {slug} = howTo.fields;\n  const stepToClip = createStepToClip(contentUrl(video.url))\n  const stepToSnippet = createStepToSnippet(slug)\n  const obj = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"HowTo\",\n    \"name\": title,\n    \"totalTime\": formatDuration(video.duration),\n    \"image\": {\n      \"@type\": \"ImageObject\",\n      \"url\": `https://shortbear.com/images/${image}`,\n    },\n    \"video\": {\n      \"@type\": \"VideoObject\",\n      \"name\": title,\n      \"description\": excerpt,\n      \"thumbnailUrl\": `https://shortbear.com/images/${video.thumbnailUrl}`,\n      \"contentUrl\": contentUrl(video.url),\n      \"embedUrl\": embedUrl(video.url),\n      \"uploadDate\": date,\n      \"duration\": formatDuration(video.duration),\n      \"hasPart\": steps.map(stepToClip)\n    },\n    \"step\": steps.map(stepToSnippet)\n  }\n  return obj;\n}\n\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport { Container } from '../components/Container'\nimport { Prose } from '../components/Prose'\nimport YouTubeEmbed from \"../components/YouTubeEmbed\";\nimport { formatDate, roundToMinutes } from '../utils/formatDateTime'\nimport { howToToSnippet } from '../utils/richSnippets'\nimport markdownToHtml from \"../utils/markdownToHtml\";\n\nfunction ArrowLeftIcon(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" fill=\"none\" aria-hidden=\"true\" {...props}>\n      <path\n        d=\"M7.25 11.25 3.75 8m0 0 3.5-3.25M3.75 8h8.5\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport const Head = ({ data }) => {\n  const { howTo } = data;\n  return (\n    <Seo \n      title={howTo.frontmatter.title} \n      description={howTo.frontmatter.excerpt} \n      snippet={howToToSnippet(howTo)}\n    />\n  )\n}\n\nconst HowTo = ({ data }) => {\n  const {howTo} = data;\n  return (\n    <>\n      <Container className=\"mt-16 lg:mt-32\">\n        <div className=\"xl:relative\">\n          <div className=\"mx-auto max-w-2xl\">\n            <Link\n              to={`/${howTo.frontmatter.category}`}\n              aria-label=\"Go back to articles\"\n              className=\"group mb-8 flex h-10 w-10 items-center justify-center rounded-full bg-white shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 transition dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0 dark:ring-white/10 dark:hover:border-zinc-700 dark:hover:ring-white/20 lg:absolute lg:-left-5 lg:mb-0 lg:-mt-2 xl:-top-1.5 xl:left-0 xl:mt-0\"\n            >\n              <ArrowLeftIcon className=\"h-4 w-4 stroke-zinc-500 transition group-hover:stroke-zinc-700 dark:stroke-zinc-500 dark:group-hover:stroke-zinc-400\" />\n            </Link>\n            <article>\n              <header className=\"flex flex-col\">\n                <h1 className=\"mt-6 text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl\">\n                  {howTo.frontmatter.title}\n                </h1>\n                <time\n                  dateTime={howTo.frontmatter.video.uploadDate}\n                  className=\"order-first flex items-center text-base text-zinc-400 dark:text-zinc-500\"\n                >\n                  <span className=\"h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500\" />\n                  <span className=\"ml-3\">{formatDate(howTo.frontmatter.date)}</span>\n                </time>\n              </header>\n              <Prose className=\"mt-8\">\n                <h2>TL;DR</h2>\n                \n                <p>Watch this {roundToMinutes(howTo.frontmatter.video.duration)} minute clip. Scroll down to see each step with code samples.</p>\n\n                <YouTubeEmbed url={howTo.frontmatter.video.url} />\n\n                {howTo.frontmatter.steps.map((s, i) => (\n                  <div key={i} id={`step${i}`}>\n                    <h2>Step {i+1}: {s.name}</h2>\n                    <p>{s.text}</p>\n                    <div dangerouslySetInnerHTML={{__html: markdownToHtml(s.body)}} />\n                  </div>\n                ))}\n              </Prose>\n            </article>\n          </div>\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport default HowTo;\n\nexport const pageQuery = graphql`\nquery HowToById($id: String!) {\n  howTo: markdownRemark(id: {eq: $id}, frontmatter: {templateKey: {eq: \"how-to\"}}) {\n    id\n    fields {\n      slug\n    }\n    frontmatter {\n      title\n      category\n      image\n      excerpt\n      date\n      video {\n        name\n        url\n        thumbnailUrl\n        duration\n      }\n      steps {\n        name\n        text\n        image\n        clip {\n          startOffset\n          endOffset\n        }\n        body\n      }\n    }\n  }\n}\n`"],"names":["title","description","snippet","name","content","type","JSON","stringify","Prose","children","className","clsx","extractIdFromUrl","url","match","contentUrl","embedUrl","test","width","height","src","frameBorder","allow","allowFullScreen","roundToMinutes","seconds","Math","floor","markdown","showdown","makeHtml","formatDuration","duration","howToToSnippet","howTo","frontmatter","date","excerpt","image","steps","video","slug","fields","stepToClip","i","clip","endOffset","startOffset","stepToSnippet","text","console","log","createStepToSnippet","thumbnailUrl","map","ArrowLeftIcon","props","viewBox","fill","d","strokeWidth","strokeLinecap","strokeLinejoin","Head","data","Seo","dateString","Container","Link","to","category","dateTime","uploadDate","Date","toLocaleDateString","day","month","year","timeZone","s","key","id","dangerouslySetInnerHTML","__html","markdownToHtml","body"],"sourceRoot":""}