{"version":3,"file":"component---src-templates-how-to-jsx-8944d3deef10a5d54641.js","mappings":"gNAGO,SAASA,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAChC,OACE,uBAAKA,WAAWC,EAAAA,EAAAA,GAAKD,EAAW,4BAA6BD,EAEhE,CCPM,ICaP,EAVqB,SAAC,GAAW,IAAVG,EAAS,EAATA,IACrB,IAAK,QAAQC,KAAKD,GAAM,CACtB,IAAME,EDLsB,SAACF,GAAD,OAASA,EAAIG,MAAM,8BAA8B,EAAjD,CCKjBC,CAAiBJ,GAC5BA,EAAG,iCAAoCE,CACxC,CACD,OACE,0BAAQG,MAAM,MAAMC,OAAO,MAAMC,IAAQP,EAAL,cAAuBQ,MAAM,uBAAuBC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,GAE3N,E,mBCJD,EALuB,SAACC,GAEtB,OADkB,IAAIC,IAAAA,YACLC,SAASF,EAC3B,ECKD,SAASG,EAAcC,GACrB,OACE,qCAAKC,QAAQ,YAAYC,KAAK,OAAO,cAAY,QAAWF,GAC1D,wBACEG,EAAE,6CACFC,YAAY,MACZC,cAAc,QACdC,eAAe,UAItB,CAED,IA0DA,EA1Dc,SAAC,GAAc,ICdEC,EATJC,EDwBlBC,EADmB,EAAXC,KACRD,MACP,OACE,gCACE,gBAACE,EAAA,EAAD,KACE,6BAAQF,EAAMG,YAAYpB,OAC1B,wBACEqB,KAAK,cACLC,QAASL,EAAMG,YAAYG,MAAMC,cAEnC,0BAAQC,KAAK,uBEJS,SAAC,GAAiC,IAAhCzB,EAA+B,EAA/BA,MAAO0B,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MACtCC,GADuD,EAAVC,KACvC,CACV,WAAY,qBACZ,QAAS,QACT,KAAQ7B,EACR,MAAS,CACP,QAAS,cACT,IAAM,uCAAwC0B,GAEhD,KAAQC,EAAMG,KAAI,SAAAC,GAAC,MAfd,CACL,QAAS,YACT,IAAO,wBAaY,MAErB,OAAOC,KAAKC,UAAUL,EACvB,CFR2CM,CAAejB,EAAMG,eAE3D,gBAACe,EAAA,EAAD,CAAW7C,UAAU,kBACnB,uBAAKA,UAAU,eACb,uBAAKA,UAAU,qBACb,gBAAC,EAAA8C,KAAD,CACEC,GAAE,IAAMpB,EAAMG,YAAYkB,SAC1B,aAAW,sBACXhD,UAAU,2VAEV,gBAACiB,EAAD,CAAejB,UAAU,0HAE3B,+BACE,0BAAQA,UAAU,iBAChB,sBAAIA,UAAU,uFACX2B,EAAMG,YAAYpB,OAErB,wBACEuC,SAAUtB,EAAMG,YAAYG,MAAMiB,WAClClD,UAAU,4EAEV,wBAAMA,UAAU,wDAChB,wBAAMA,UAAU,SCvDP0B,EDuD0BC,EAAMG,YAAYqB,KCtD9D,IAAIC,KAAK1B,GAAY2B,mBAAmB,QAAS,CACtDC,IAAK,UACLC,MAAO,OACPC,KAAM,UACNC,SAAU,YDqDA,gBAAC3D,EAAD,CAAOE,UAAU,QACf,mCAEA,wCCpDeyB,EDoDeE,EAAMG,YAAYG,MAAMyB,SCnD7DC,KAAKC,MAAMnC,EAAU,IAAM,GDmDpB,iEAEA,gBAAC,EAAD,CAAcvB,IAAKyB,EAAMG,YAAYG,MAAM/B,MAE1CyB,EAAMG,YAAYO,MAAMG,KAAI,SAACC,EAAGoB,GAAJ,OAC3B,uBAAKC,IAAKD,GACR,kCAAUA,EAAE,EAAZ,KAAiBpB,EAAEV,MACnB,yBAAIU,EAAEsB,MACN,uBAAKC,wBAAyB,CAACC,OAAQC,EAAezB,EAAE0B,SAJ/B,SAc5C,C","sources":["webpack://short-bear/./src/components/Prose.jsx","webpack://short-bear/./src/utils/youTube.js","webpack://short-bear/./src/components/YouTubeEmbed.jsx","webpack://short-bear/./src/utils/markdownToHtml.js","webpack://short-bear/./src/templates/how-to.jsx","webpack://short-bear/./src/utils/formatDateTime.js","webpack://short-bear/./src/utils/richSnippets.js"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\n\nexport function Prose({ children, className }) {\n  return (\n    <div className={clsx(className, 'prose dark:prose-invert')}>{children}</div>\n  )\n}\n","export const extractIdFromUrl = (url) => url.match(/^https:\\/\\/youtu.be\\/(.+)$/)[1]","import React from \"react\";\nimport { extractIdFromUrl } from \"../utils/youTube\";\n\nconst YouTubeEmbed = ({url}) => {\n  if (!/embed/.test(url)) {\n    const id = extractIdFromUrl(url)\n    url = `https://www.youtube.com/embed/${id}`\n  }\n  return (\n    <iframe width=\"560\" height=\"315\" src={`${url}?controls=0`} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n  )\n}\n\nexport default YouTubeEmbed;","import showdown from \"showdown\";\n\nconst markdownToHtml = (markdown) => {\n  const converter = new showdown.Converter()\n  return converter.makeHtml(markdown);\n}\n\nexport default markdownToHtml;","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport { Container } from '../components/Container'\nimport { Prose } from '../components/Prose'\nimport YouTubeEmbed from \"../components/YouTubeEmbed\";\nimport { formatDate, roundToMinutes } from '../utils/formatDateTime'\nimport { howToToSnippet } from '../utils/richSnippets'\nimport markdownToHtml from \"../utils/markdownToHtml\";\n\nfunction ArrowLeftIcon(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" fill=\"none\" aria-hidden=\"true\" {...props}>\n      <path\n        d=\"M7.25 11.25 3.75 8m0 0 3.5-3.25M3.75 8h8.5\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nconst HowTo = ({ data }) => {\n  const {howTo} = data;\n  return (\n    <>\n      <Helmet>\n        <title>{howTo.frontmatter.title}</title>\n        <meta\n          name=\"description\"\n          content={howTo.frontmatter.video.description}\n        />\n        <script type=\"application/ld+json\">{howToToSnippet(howTo.frontmatter)}</script>\n      </Helmet>\n      <Container className=\"mt-16 lg:mt-32\">\n        <div className=\"xl:relative\">\n          <div className=\"mx-auto max-w-2xl\">\n            <Link\n              to={`/${howTo.frontmatter.category}`}\n              aria-label=\"Go back to articles\"\n              className=\"group mb-8 flex h-10 w-10 items-center justify-center rounded-full bg-white shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 transition dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0 dark:ring-white/10 dark:hover:border-zinc-700 dark:hover:ring-white/20 lg:absolute lg:-left-5 lg:mb-0 lg:-mt-2 xl:-top-1.5 xl:left-0 xl:mt-0\"\n            >\n              <ArrowLeftIcon className=\"h-4 w-4 stroke-zinc-500 transition group-hover:stroke-zinc-700 dark:stroke-zinc-500 dark:group-hover:stroke-zinc-400\" />\n            </Link>\n            <article>\n              <header className=\"flex flex-col\">\n                <h1 className=\"mt-6 text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl\">\n                  {howTo.frontmatter.title}\n                </h1>\n                <time\n                  dateTime={howTo.frontmatter.video.uploadDate}\n                  className=\"order-first flex items-center text-base text-zinc-400 dark:text-zinc-500\"\n                >\n                  <span className=\"h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500\" />\n                  <span className=\"ml-3\">{formatDate(howTo.frontmatter.date)}</span>\n                </time>\n              </header>\n              <Prose className=\"mt-8\">\n                <h2>TL;DR</h2>\n                \n                <p>Watch this {roundToMinutes(howTo.frontmatter.video.duration)} minute clip. Scroll down to see each step with code samples.</p>\n\n                <YouTubeEmbed url={howTo.frontmatter.video.url} />\n\n                {howTo.frontmatter.steps.map((s, i) => (\n                  <div key={i}>\n                    <h2>Step {i+1}: {s.name}</h2>\n                    <p>{s.text}</p>\n                    <div dangerouslySetInnerHTML={{__html: markdownToHtml(s.body)}} />\n                  </div>\n                ))}\n              </Prose>\n            </article>\n          </div>\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport default HowTo;\n\nexport const pageQuery = graphql`\nquery HowToById($id: String!) {\n  howTo: markdownRemark(id: {eq: $id}, frontmatter: {templateKey: {eq: \"how-to\"}}) {\n    id\n    frontmatter {\n      title\n      category\n      image\n      excerpt\n      date\n      video {\n        name\n        url\n        thumbnailUrl\n        duration\n      }\n      steps {\n        name\n        text\n        image\n        clip {\n          startOffset\n          endOffset\n        }\n        body\n      }\n    }\n  }\n}\n`","export const formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n    timeZone: 'UTC',\n  })\n}\n\nexport const roundToMinutes = (seconds) => {\n  return Math.floor(seconds / 60) + 1;\n}","import markdownToHtml from \"./markdownToHtml\";\n\nconst faqToSnippet = (faq) => (\n  {\n    \"@type\": \"Question\",\n    \"name\": faq.question,\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": markdownToHtml(faq.seo_answer)\n    }\n  }\n)\n\nexport const faqsToSnippet = (faqs) => {\n  const obj = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": faqs.map(faqToSnippet)\n  }\n  return JSON.stringify(obj);\n}\n\nconst stepToSnippet = (step, slug) => {\n  return {\n    \"@type\": \"HowToStep\",\n    \"url\": \"https://shortbear.com\"\n  }\n}\n\nexport const howToToSnippet = ({title, image, steps, slug}) => {\n  const obj = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"HowTo\",\n    \"name\": title,\n    \"image\": {\n      \"@type\": \"ImageObject\",\n      \"url\": `https://shortbear.com/static/images/${image}`,\n    },\n    \"step\": steps.map(s => stepToSnippet(s, slug))\n  }\n  return JSON.stringify(obj);\n}\n\n"],"names":["Prose","children","className","clsx","url","test","id","match","extractIdFromUrl","width","height","src","title","frameBorder","allow","allowFullScreen","markdown","showdown","makeHtml","ArrowLeftIcon","props","viewBox","fill","d","strokeWidth","strokeLinecap","strokeLinejoin","seconds","dateString","howTo","data","Helmet","frontmatter","name","content","video","description","type","image","steps","obj","slug","map","s","JSON","stringify","howToToSnippet","Container","Link","to","category","dateTime","uploadDate","date","Date","toLocaleDateString","day","month","year","timeZone","duration","Math","floor","i","key","text","dangerouslySetInnerHTML","__html","markdownToHtml","body"],"sourceRoot":""}